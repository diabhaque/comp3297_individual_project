{"version":3,"sources":["client/requests.ts","client/utils.ts","home/AddLocationModal.tsx","home/LocationDataTable.tsx","home/LocationSelector.tsx","home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getNewLocationData","location","params","JSON","stringify","resourceURL","url","URL","apiEndpoint","URLSearchParams","toString","request","Request","ok","fetch","then","r","json","pastEight","slice","main","length","console","log","name","populationSize","produceNewLocationData","catch","err","AddLocationModal","onSubmit","useState","visible","setVisible","type","onClick","onCreate","values","onCancel","CollectionCreateForm","Form","useForm","form","title","okText","cancelText","onOk","validateFields","resetFields","info","layout","initialValues","modifier","Item","label","rules","required","message","style","width","min","LocationDataTable","locationData","columns","Object","keys","map","field","dataIndex","key","dataSource","pagination","Option","Select","LocationSelector","locations","onChange","options","value","showSearch","defaultValue","undefined","placeholder","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","openNotificationWithIcon","body","notification","description","placement","Home","setLocations","currentLocation","setCurrentLocation","currentLocationData","setCurrentLocationData","useEffect","isCancelled","getLocations","filter","display","flexDirection","justifyContent","fontSize","fontWeight","paddingBottom","paddingTop","borderTop","borderBottom","method","headers","addLocation","concat","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KA8EaA,EAAqB,SAACC,GAC/B,IAAIC,EAAS,CACT,EAAKC,KAAKC,UAAU,CAChB,SAAWH,EAASI,YACpB,QAAW,EACX,OAAS,OACT,QAAU,MAGZC,EAAM,IAAIC,IAAIN,EAASO,YAAc,IAAM,IAAIC,gBAAgBP,GAAQQ,YACvEC,EAAU,IAAIC,QAAQN,EAAII,YAE5BG,GAAK,EACT,OAAOC,MAAMH,GACRI,MAAK,SAACC,GAEH,OADAH,EAAKG,EAAEH,GACAG,EAAEC,UAEZF,MAAK,SAACC,GACH,OAAIH,EC1FsB,SAACZ,EAAoBe,GACvD,IAAME,EAA4BF,EAAEG,OAAO,GACrCC,EAAqBF,EAAUA,EAAUG,OAAS,GAGxD,OAFAC,QAAQC,IAAIH,GAEL,CAAC,CACJ,mBAAoBnB,EAASuB,KAC7B,aAAcJ,EAAK,cACnB,kCAAmCA,EAAK,6BACxC,gEAAiEA,EAAK,6BAA6BnB,EAASwB,eAC5G,6BAA8BL,EAAK,yBACnC,uDAAwDA,EAAK,yBAAyBnB,EAASwB,eAC/F,4BAA6BL,EAAK,6BAA+BF,EAAUA,EAAUG,OAAS,GAAG,6BACjG,qCAAsCD,EAAK,6BAA+BF,EAAU,GAAG,8BAAgC,EACvH,iCAAkCE,EAAK,yBAA2BF,EAAUA,EAAUG,OAAS,GAAG,yBAClG,0CAA2CD,EAAK,yBAA2BF,EAAU,GAAG,0BAA4B,ID4ErGQ,CAAuBzB,EAASe,GAEhC,QAGdW,OAAM,SAACC,GAEJ,OADAN,QAAQC,IAAIK,GACL,S,oDElGNC,EAAmB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAsC,EACvCC,oBAAS,GAD8B,mBAC9DC,EAD8D,KACrDC,EADqD,KASrE,OACI,gCACI,cAAC,IAAD,CACIC,KAAK,UACLC,QAAS,WACLF,GAAW,IAHnB,0BAQA,cAAC,EAAD,CACID,QAASA,EACTI,SAlBK,SAACC,GACdf,QAAQC,IAAI,4BAA6Bc,GACzCP,EAASO,GACTJ,GAAW,IAgBHK,SAAU,WACNL,GAAW,UAazBM,EAAuB,SAAC,GAID,IAHzBP,EAGwB,EAHxBA,QACAI,EAEwB,EAFxBA,SACAE,EACwB,EADxBA,SACwB,EACTE,IAAKC,UAAbC,EADiB,oBAExB,OACI,cAAC,IAAD,CACIV,QAASA,EACTW,MAAM,qBACNC,OAAO,MACPC,WAAW,SACXP,SAAUA,EACVQ,KAAM,WACFJ,EAAKK,iBACAhC,MAAK,SAACsB,GACHK,EAAKM,cACLZ,EAASC,MAEZV,OAAM,SAACsB,GACJ3B,QAAQC,IAAI,mBAAoB0B,OAbhD,SAiBI,eAAC,IAAD,CACIP,KAAMA,EACNQ,OAAO,WACP1B,KAAK,gBACL2B,cAAe,CAAEC,SAAU,UAJ/B,UAMI,cAAC,IAAKC,KAAN,CACI7B,KAAK,OACL8B,MAAM,gBACNC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,2CANrB,SAUI,cAAC,IAAD,MAGJ,cAAC,IAAKJ,KAAN,CACI7B,KAAK,iBACL8B,MAAM,+BACNC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,mDANrB,SAUI,cAAC,IAAD,CAAaC,MAAO,CAACC,MAAO,QAASC,IAAI,QAG7C,cAAC,IAAKP,KAAN,CACI7B,KAAK,cACL8B,MAAM,eACNC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,0DACTvB,KAAM,QAPlB,SAWI,cAAC,IAAD,MAGJ,cAAC,IAAKmB,KAAN,CACI7B,KAAK,cACL8B,MAAM,kBACNC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,0DACTvB,KAAM,QAPlB,SAWI,cAAC,IAAD,Y,kBCrHP2B,EAAoB,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,aAC1BC,EAAUC,OAAOC,KAAKH,GAAcI,KAAI,SAACC,GAC3C,MAAO,CACHxB,MAAOwB,EACPC,UAAWD,EACXE,IAAKF,MAIb,OACI,cAAC,IAAD,CAAOG,WAAY,CAAC,2BAAKR,GAAN,IAAoBO,IAAK,KAAMN,QAASA,EAASQ,YAAY,K,QCRhFC,EAAWC,IAAXD,OAEKE,EAAmB,SAAC,GAGH,IAF1BC,EAEyB,EAFzBA,UACAC,EACyB,EADzBA,SAGMC,EAAUF,EAAUT,KAAI,SAACjE,GAAD,OAAY,cAACuE,EAAD,CAA4BM,MAAO7E,EAASuB,KAA5C,SAAmDvB,EAASuB,MAA/CvB,EAASuB,SAEhE,OACI,cAAC,IAAD,CACIuD,YAAU,EACVrB,MAAO,CAAEC,MAAO,KAChBiB,SAAUA,EACVI,kBAAcC,EACdC,YAAY,mBACZC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OACJ,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQR,MAAMS,cAAcC,QAAQH,EAAME,iBAAkB,GAEhEE,WAAY,SAACC,EAASC,GAAV,OACRD,EAAQZ,MAAMS,cAAcK,cAAcD,EAAQb,MAAMS,gBAXhE,SAcKV,K,SCtBPgB,G,OAA2B,SAAC3D,EAAgBS,EAAemD,GAC7DC,IAAa7D,GAAM,CACjBuB,QAASd,EACTqD,YAAaF,EACbG,UAAW,iBAIJC,EAAO,WAAO,IAAD,EACYnE,mBAAqB,IADjC,mBACf4C,EADe,KACJwB,EADI,OAEwBpE,mBAC1C,MAHkB,mBAEfqE,EAFe,KAEEC,EAFF,OAQlBtE,mBAAiC,MARf,mBAMlBuE,EANkB,KAOlBC,EAPkB,KAUtBC,qBAAU,WACN,IAAIC,GAAc,EAalB,OLxCoB,WACxB,IAAMnG,EAAM,IAAIC,IAAJ,kBCDL,6BDCK,mBACNI,EAAU,IAAIC,QAAQN,EAAII,YAEhC,OAAOI,MAAMH,GACRI,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OAAOA,KACZW,OAAM,SAACC,GAEJ,OADAN,QAAQC,IAAIK,GACL,QKoBX8E,GAAe3F,MAAK,SAACC,IACZyF,GAAezF,GAChBmF,EAAanF,GACbqF,EACIrF,EAAE2F,QAAO,SAAC1G,GAAD,MAAgC,cAAlBA,EAASuB,QAAsB,KAG1DqE,EAAyB,QAAS,QAAS,wCAI5C,WACHY,GAAc,KAEnB,IAEHD,qBAAU,WACFJ,GACApG,EAAmBoG,GAAiBrF,MAAK,SAACC,GAC5B,OAANA,EACAuF,EAAuBvF,EAAE,KAEzBM,QAAQC,IAAI,qCACZsE,EAAyB,QAAS,QAAS,2CAIxD,CAACO,IAsBJ,OACI,gCACI,qBACI1C,MAAO,CACHkD,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,SAAU,OACVC,WAAY,UANpB,0BAWA,sBACItD,MAAO,CACHkD,QAAS,OACTC,cAAe,MACfC,eAAgB,eAChBG,cAAe,MACfC,WAAY,MACZC,UAAW,kBACXC,aAAc,mBARtB,UAWI,cAAC,EAAD,CACIzC,UAAWA,EACXC,SA9CiB,SAACE,GAC9BuB,EACI1B,EAAUgC,QACN,SAAC1G,GAAD,OAAcA,EAASuB,OAASsD,EAAMpE,cACxC,OA4CE,cAAC,EAAD,CAAkBoB,SAxCF,SAAC7B,ILrDN,SAACA,GACxB,IAAMU,EAAU,IAAIC,QAAJ,kBCdT,6BDcS,mBAAuD,CACnEyG,OAAQ,OACRC,QAAS,CACL,eAAgB,mCAEpBxB,KAAM3F,KAAKC,UAAUH,KAGrBY,GAAK,EACT,OAAOC,MAAMH,GACRI,MAAK,SAACC,GAEH,OADAH,EAAKG,EAAEH,GACAG,EAAEC,UAEZF,MAAK,SAACC,GACH,OAAIH,EACOG,EAEA,QAGdW,OAAM,SAACC,GAEJ,OADAN,QAAQC,IAAIK,GACL,SK+BX2F,CAAYtH,GAAUc,MAAK,SAACC,GACpBA,EACAmF,EAAaxB,EAAU6C,OAAO,CAACxG,MAE/BM,QAAQC,IAAI,UACZsE,EAAyB,QAAS,QAAS,iDAoC/C,8BACKS,GACG,cAAC,EAAD,CAAmBxC,aAAcwC,UCxGtCmB,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCSSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB9G,MAAK,YAAkD,IAA/C+G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.14d70302.chunk.js","sourcesContent":["import { Location, LocationData, NewLocationData } from \"../types/locationTypes\";\nimport { getHostName, produceNewLocationData } from \"./utils\";\n\nexport const getLocations = (): Promise<Location[] | null> => {\n    const url = new URL(`https://${getHostName()}/api/locations`);\n    const request = new Request(url.toString());\n\n    return fetch(request)\n        .then((r) => r.json())\n        .then((r) => r as Location[])\n        .catch((err) => {\n            console.log(err)\n            return null\n        });\n};\n\nexport const addLocation = (location: Location): Promise<Location | null> => {\n    const request = new Request(`https://${getHostName()}/api/locations/`, {\n        method: \"post\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        body: JSON.stringify(location)\n    });\n\n    let ok = false;\n    return fetch(request)\n        .then((r) => {\n            ok = r.ok;\n            return r.json();\n        })\n        .then((r) => {\n            if (ok) {\n                return r as Location;\n            } else {\n                return null;\n            }\n        })\n        .catch((err) => {\n            console.log(err)\n            return null\n        });\n};\n\nexport const getLocationData = (location: Location): Promise<LocationData[] | null> => {\n    const yesterday = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date)\n    let params = {\n        \"q\": JSON.stringify({\n            \"resource\":location.resourceURL,\n            \"section\": 1,\n            \"format\":\"json\",\n            \"filters\":[\n                [1, \"eq\", [yesterday.toLocaleDateString()]]\n            ]\n        })\n    }\n    const url = new URL(location.apiEndpoint + '?' + new URLSearchParams(params).toString())\n    const request = new Request(url.toString());\n\n    let ok = false;\n    return fetch(request)\n        .then((r) => {\n            ok = r.ok;\n            return r.json();\n        })\n        .then((r) => {\n            if (ok) {\n                return r as LocationData[];\n            } else {\n                return null;\n            }\n        })\n        .catch((err)=>{\n            console.log(err)\n            return null\n        });\n};\n\nexport const getNewLocationData = (location: Location): Promise<NewLocationData[] | null> => {\n    let params = {\n        \"q\": JSON.stringify({\n            \"resource\":location.resourceURL,\n            \"section\": 1,\n            \"format\":\"json\",\n            \"filters\":[]\n        })\n    }\n    const url = new URL(location.apiEndpoint + '?' + new URLSearchParams(params).toString())\n    const request = new Request(url.toString());\n\n    let ok = false;\n    return fetch(request)\n        .then((r) => {\n            ok = r.ok;\n            return r.json();\n        })\n        .then((r) => {\n            if (ok) {\n                return produceNewLocationData(location,r);\n            } else {\n                return null;\n            }\n        })\n        .catch((err)=>{\n            console.log(err)\n            return null\n        });\n};\n","import { LocationData, NewLocationData, Location } from \"../types/locationTypes\";\n\nexport const getHostName = (): string => {\n    return \"cov-retrieve.herokuapp.com\"; \n    // return \"localhost:8000\"\n};\n\nexport const produceNewLocationData = (location: Location, r: any): NewLocationData[] | null =>{\n    const pastEight: LocationData[] = r.slice(-8)\n    const main: LocationData = pastEight[pastEight.length - 1]\n    console.log(main)\n\n    return [{\n        \"Name of Location\": location.name,\n        \"As of date\": main[\"As of date\"],\n        \"Total number of confirmed cases\": main[\"Number of confirmed cases\"],\n        \"Total number of confirmed cases per million of the population\": main[\"Number of confirmed cases\"]/location.populationSize,\n        \"Total number of fatalities\": main[\"Number of death cases\"],\n        \"Total number of fatalities per million of population\": main[\"Number of death cases\"]/location.populationSize,\n        \"Number of new cases today\": main[\"Number of confirmed cases\"] - pastEight[pastEight.length - 2][\"Number of confirmed cases\"],\n        \"7-day average number of new cases\": (main[\"Number of confirmed cases\"] - pastEight[0][\"Number of confirmed cases\"]) / 7,\n        \"Number of new fatalities today\": main[\"Number of death cases\"] - pastEight[pastEight.length - 2][\"Number of death cases\"],\n        \"7-day average number of new fatalities\": (main[\"Number of death cases\"] - pastEight[0][\"Number of death cases\"]) / 7\n    }]\n}","import React, { useState } from \"react\";\nimport { Modal, Button, Form, Input, InputNumber } from \"antd\";\nimport { Location } from \"../types/locationTypes\";\ninterface AddLocationModalProps {\n    onSubmit: (location: Location) => void;\n}\n\nexport const AddLocationModal = ({ onSubmit }: AddLocationModalProps) => {\n    const [visible, setVisible] = useState(false);\n\n    const onCreate = (values: any) => {\n        console.log(\"Received values of form: \", values);\n        onSubmit(values as Location)\n        setVisible(false);\n    };\n\n    return (\n        <div>\n            <Button\n                type=\"primary\"\n                onClick={() => {\n                    setVisible(true);\n                }}\n            >\n                Add Location\n            </Button>\n            <CollectionCreateForm\n                visible={visible}\n                onCreate={onCreate}\n                onCancel={() => {\n                    setVisible(false);\n                }}\n            />\n        </div>\n    );\n};\n\ninterface AddLocationFormProps {\n    visible: boolean;\n    onCreate: (values: Location) => void;\n    onCancel: () => void;\n}\n\nconst CollectionCreateForm = ({\n    visible,\n    onCreate,\n    onCancel\n}: AddLocationFormProps) => {\n    const [form] = Form.useForm();\n    return (\n        <Modal\n            visible={visible}\n            title=\"Add a new Location\"\n            okText=\"Add\"\n            cancelText=\"Cancel\"\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then((values) => {\n                        form.resetFields();\n                        onCreate(values);\n                    })\n                    .catch((info) => {\n                        console.log(\"Validate Failed:\", info);\n                    });\n            }}\n        >\n            <Form\n                form={form}\n                layout=\"vertical\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: \"public\" }}\n            >\n                <Form.Item\n                    name=\"name\"\n                    label=\"Location Name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input the name of the location!\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"populationSize\"\n                    label=\"Current Estimated Population\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input the Current Estimated Population!\"\n                        }\n                    ]}\n                >\n                    <InputNumber style={{width: '100%'}} min=\"0\"/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"apiEndpoint\"\n                    label=\"API Endpoint\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input a valid URL! (e.g. https://www.google.com)\",\n                            type: 'url'\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"resourceURL\"\n                    label=\"URL of Resource\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input a valid URL! (e.g. https://www.google.com)\",\n                            type: 'url'\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n};\n\n","import { Table } from \"antd\";\nimport { LocationData, NewLocationData } from \"../types/locationTypes\";\n\ninterface LocationDataTableProps {\n    locationData: NewLocationData;\n}\n\nexport const LocationDataTable = ({ locationData }: LocationDataTableProps) => {\n    const columns = Object.keys(locationData).map((field) => {\n        return {\n            title: field,\n            dataIndex: field,\n            key: field\n        };\n    });\n\n    return (\n        <Table dataSource={[{ ...locationData, key: 1 }]} columns={columns} pagination={false}/>\n    );\n};\n","import { Select } from \"antd\";\nimport { ValueType } from \"rc-input-number/lib/utils/MiniDecimal\";\nimport { Location } from \"../types/locationTypes\";\n\ninterface LocationSelectorProps {\n    locations: Location[];\n    onChange: (value: ValueType) => void;\n}\n\nconst { Option } = Select;\n\nexport const LocationSelector = ({\n    locations,\n    onChange\n}: LocationSelectorProps) => {\n\n    const options = locations.map((location)=><Option key={location.name} value={location.name}>{location.name}</Option>)\n\n    return (\n        <Select\n            showSearch\n            style={{ width: 200 }}\n            onChange={onChange}\n            defaultValue={undefined}\n            placeholder=\"Search to Select\"\n            optionFilterProp=\"children\"\n            filterOption={(input, option) =>\n                option?.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            filterSort={(optionA, optionB) =>\n                optionA.value.toLowerCase().localeCompare(optionB.value.toLowerCase())\n            }\n        >\n            {options}\n        </Select>\n    );\n};\n","import { useEffect, useState } from \"react\";\nimport { Location, LocationData, NewLocationData } from \"../types/locationTypes\";\nimport { addLocation, getLocations, getLocationData, getNewLocationData } from \"../client/requests\";\nimport { AddLocationModal } from \"./AddLocationModal\";\nimport { LocationDataTable } from \"./LocationDataTable\";\nimport { LocationSelector } from \"./LocationSelector\";\nimport { notification } from 'antd';\nimport \"antd/dist/antd.css\";\nimport { ValueType } from \"rc-input-number/lib/utils/MiniDecimal\";\nimport { IconType } from \"antd/lib/notification/index\";\n\nconst openNotificationWithIcon = (type: IconType, title: string, body: string) => {\n    notification[type]({\n      message: title,\n      description: body,\n      placement: 'bottomLeft'\n    });\n  };\n\nexport const Home = () => {\n    const [locations, setLocations] = useState<Location[]>([]);\n    const [currentLocation, setCurrentLocation] = useState<Location | null>(\n        null\n    );\n    const [\n        currentLocationData,\n        setCurrentLocationData\n    ] = useState<NewLocationData | null>(null);\n\n    useEffect(() => {\n        let isCancelled = false;\n\n        getLocations().then((r) => {\n            if (!isCancelled && r) {\n                setLocations(r);\n                setCurrentLocation(\n                    r.filter((location) => location.name === \"Hong Kong\")[0]\n                );\n            }else{\n                openNotificationWithIcon('error', 'Error', 'Unable to retrieve location data!')\n            }\n        });\n\n        return () => {\n            isCancelled = true;\n        };\n    }, []);\n\n    useEffect(() => {\n        if (currentLocation) {\n            getNewLocationData(currentLocation).then((r)=>{\n                if (r !== null) {\n                    setCurrentLocationData(r[0]);\n                } else {\n                    console.log(\"Could not retrieve location data!\");\n                    openNotificationWithIcon('error', 'Error', 'Unable to retrieve location data!')\n                }\n            })\n        }\n    }, [currentLocation]);\n\n    const onLocationSelectorChange = (value: ValueType) => {\n        setCurrentLocation(\n            locations.filter(\n                (location) => location.name === value.toString()\n            )[0]\n        );\n    };\n\n    const onAddLocationSubmit = (location: Location) => {\n        // CHECK FOR CORRECT RESPONSE\n        addLocation(location).then((r) => {\n            if (r) {\n                setLocations(locations.concat([r]));\n            } else {\n                console.log(\"Error!\");\n                openNotificationWithIcon('error', 'Error', 'Unable to add location to database!')\n            }\n        });\n    };\n\n    return (\n        <div>\n            <div\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"center\",\n                    fontSize: \"50px\",\n                    fontWeight: \"bolder\"\n                }}\n            >\n                Cov Retrieve\n            </div>\n            <div\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-around\",\n                    paddingBottom: \"1vh\",\n                    paddingTop: \"1vh\",\n                    borderTop: \"1px solid black\",\n                    borderBottom: \"1px solid black\"\n                }}\n            >\n                <LocationSelector\n                    locations={locations}\n                    onChange={onLocationSelectorChange}\n                />\n                <AddLocationModal onSubmit={onAddLocationSubmit} />\n            </div>\n\n            <div>\n                {currentLocationData && (\n                    <LocationDataTable locationData={currentLocationData} />\n                )}\n            </div>\n        </div>\n    );\n};\n","import { Home } from './home/Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}